:script
    require(["main", "bootstrap"], function(){
        Rocket.PageValues = {
            getPageId: function(){
                return "#{page.pageId}";
            },
            getPageFriendlyURL : function(){
                return "#{page.friendlyURL}";
            }
        };
        Rocket.Props = {
            getAppUrl: function(){
                return "#{props.appURL}"
            },
            getPluginIdAndIId: #{getPluginIdAndIId}
        };
        Rocket.User ={
            getUserName : function(){
                return "#{user.userName}";
            },
            getUserFullName : function(){
                return "#{user.FirstName + '' + user.lastName }";
            },
            isSignedIn : function(){
                return #{req.session.loggedIn};
            },
            getUserId: function(){
                return "#{user.userId}";
            },
            getProfilePicURL: function(){
                return '!{getUserProfilePicURL(user)}' ;
            },
            getDefaultProfilePicURL: function(){
                return '!{getDefaultProfilePicURL()}';
            }
        }
    });

- if(req.params.plugin)
    :script
        require(["plugin"], function(){
            var currentPlugin = {
                pluginId : '#{req.params.plugin}'
            };
            if('#{req.params.iId}'){
                currentPlugin.iId = '#{req.params.iId}';
            }
            currentPlugin.namespace = '#{req.params.namespace}';
            Rocket.Plugin.currentPlugin = currentPlugin;
        });




-if(!req.attrs.isErrorPage && req.session.loggedIn &&  (req.query && req.query.mode != "maximized"))
    - var permissionValidator = new PermissionValidator(req, "model.pageSchema.Page", "Page");
    - var hasPageUpdatePermission =  permissionValidator.hasPermission("UPDATE", page.pageId).isAuthorized == true;
    - var hasPageAddPluginPermission =  permissionValidator.hasPermission("ADD_PLUGIN", page.pageId).isAuthorized == true;
    - var hasPageRemovePluginPermission =  permissionValidator.hasPermission("REMOVE_PLUGIN", page.pageId).isAuthorized == true;
    -if(hasPageUpdatePermission)
        script
            require(['layout']);

    -if(page.friendlyURL != "/settings")
        script
            require(['handlePlugins']);

